name: Deploy to Development

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - development
    paths:
      #only run if there are changes in dbt folder
      - "dbt/**"
  # push:
  #   branches:
  #     - development
  #   paths:
  #     #only run if there are changes in dbt folder
  #     - "dbt/**"

env:
  ENVIRONMENT: development
        #   env:  # Pass the secret as an environment variable
  SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dbt

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # - name: Debug Secret (Do NOT use in production)
      #   env:
      #     GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.DBT_SNOWFLAKE_SERVICE_ACCOUNT_KEY }}
      #   run: |
      #     echo "$GCP_SERVICE_ACCOUNT_KEY" | base64 --decode
      # Step 2: Write the credentials JSON to a temporary file
      - name: Create credentials file from secret
        run: |
          mkdir -p ./credentials
          echo "${{ secrets.DBT_SNOWFLAKE_SERVICE_ACCOUNT_KEY }}" | base64 --decode > ./credentials/dbt-snowflake-credentials-sa.json
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: token-metrics-389311  # Replace with your GCP Project ID
      # Step 3: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=./credentials/dbt-snowflake-credentials-sa.json
      - name: Get dbt Manifest
        run: |
          mkdir state
          gcloud storage cp gs://tm-dbt-snowflake/${ENVIRONMENT}/manifest.json ./state/manifest.json || echo "File does not exist. Skipping..."
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dbt
        run: |
          python -m pip install --upgrade pip
          pip install dbt-snowflake==1.7.5
      - name: Run SlimCI for DBT 
        run: |
          dbt deps
          if [ -f ./state/manifest.json ]; then
            echo "manifest.json found, running modified models"
            dbt build --target ci --select state:modified+ --defer --state ./state
          else
            echo "manifest.json not found, running all models"
            dbt build --target ci
          fi
      - name: Upload manifest to GCS
        if: ${{ github.event_name == 'push' }} 
        run: |
          gsutil cp target/manifest.json gs://tm-dbt-snowflake/${ENVIRONMENT}/

  deploy:
    if: ${{ github.event_name == 'push' }} # Ensure this job runs only on push events (after merge)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy dbt and Airflow DAGs to Dev Server
        run: |
          echo "Deploying to development server"
          # Add your actual deployment commands here
